@model HMS.Models.ReceptionistDashboardModel
@{
    Layout = "~/Views/Shared/_ReceptionistLayout.cshtml";
    HMS.Common.EncryptDecrypt encDecr = new HMS.Common.EncryptDecrypt();
    string Action = ViewContext.RouteData.Values["action"].ToString();
    string Controller = ViewContext.RouteData.Values["controller"].ToString();
}
<div class="page-header">
    <div class="page-leftheader">
        <h4 class="page-title mb-0">Receptionist DashBoard </h4>
        </>
    </div>
</div>
@using (Html.BeginForm(Action, Controller, null, FormMethod.Post))
{
    <div class="row">
	    <div class="col-xl-12">
		    <div class="banner banner-color mt-0">
			    <div class="col-xl-2 col-lg-3 col-md-12">
				    <img src="../assets/images/svg/new_message.svg" alt="image" class="image">
			    </div>
			    <div class="page-content col-xl-7 col-lg-6 col-md-12">
				    <h3 class="mb-1">Welcome back!  @ViewBag.Consultantname </h3>
				    <p class="mb-0 fs-16">@ViewBag.Currentdate &ensp;||&ensp; Start Time :-@ViewBag.StartedTime &ensp;-&ensp; End Time :-@ViewBag.EndedTime</p>
			    </div>			   
		    </div>
	    </div>
    </div>
    <!-- row opened -->
	<div class="row">
	    <div class="col-sm-12 col-md-12 col-lg-6 col-xl-3">
		    <div class="card overflow-hidden">
			    <div class="card-body">
				    <div class="d-flex">
					    <div class="">
						    <p class="mb-2 h6">Active Client</p>
    						<h2 class="mb-1 ">@ViewBag.totalPatient</h2>

                            @if(@ViewBag.ChangeDirection=="Increase")
                            {
                                <p class="mb-0 text-muted"><span class="text-success">(@ViewBag.PercentageChange%)<i class="fe fe-arrow-up text-success"></i></span>@ViewBag.ChangeDirection</p>
                            }
                             else if(@ViewBag.ChangeDirection=="Decrease")
                            {
                                <p class="mb-0 text-muted"><span class="text-danger">(@ViewBag.PercentageChange%)</span><i class="fe fe-arrow-down text-danger"></i>@ViewBag.ChangeDirection</p>
                            } 
                            else
                            {
                                <p class="mb-0 text-muted"><span class="text-danger">(@ViewBag.PercentageChange%)</span><i class="fe fe-arrow-down text-danger"></i>@ViewBag.ChangeDirection</p>
                            }
                        </div>
			    		<div class=" my-auto ml-auto">
						<div class="chart-wrapper text-center">
							<canvas id="areaChart1" class="areaChart2 chartjs-render-monitor chart-dropshadow-primary overflow-hidden mx-auto"></canvas>
						</div>
					</div>
				</div>
			</div>
        </div>
    </div>
	<div class="col-sm-12 col-md-12 col-lg-6 col-xl-3">
		<div class="card overflow-hidden">
			<div class="card-body">
				<div class="d-flex">
					<div class="">
						<p class="mb-2 h6">Total Revenue</p>
						<h2 class="mb-1 ">Rs.@ViewBag.netamount</h2>
                            @if(@ViewBag.RevenueChangeDirection=="Increase")
                            {
                                <p class="mb-0 text-muted"><span class="text-success">(@ViewBag.RevenuePercentageChange%)<i class="fe fe-arrow-up text-success"></i></span>@ViewBag.RevenueChangeDirection</p>
                            }
                             else if(@ViewBag.RevenueChangeDirection=="Decrease")
                            {
                                <p class="mb-0 text-muted"><span class="text-danger">(@ViewBag.RevenuePercentageChange%)</span><i class="fe fe-arrow-down text-danger"></i>@ViewBag.RevenueChangeDirection</p>
                            } 
                            else
                            {
                                <p class="mb-0 text-muted"><span class="text-danger">(@ViewBag.RevenuePercentageChange%)</span><i class="fe fe-arrow-down text-danger"></i>@ViewBag.RevenueChangeDirection</p>
                            }
					</div>
					<div class=" my-auto ml-auto">
						<div class="chart-wrapper">
							<canvas id="areaChart2" class="areaChart2 chartjs-render-monitor chart-dropshadow-secondary overflow-hidden"></canvas>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
	<div class="col-sm-12 col-md-12 col-lg-6 col-xl-3">
		<div class="card overflow-hidden">
			<div class="card-body">
				<div class="d-flex">
					<div class="">
						<p class="mb-2 h6">Services</p>
						<h2 class="mb-1 ">@ViewBag.TodayServiceCount</h2>
						@if(@ViewBag.ServiceChangeDirection=="Increase")
                            {
                                <p class="mb-0 text-muted"><span class="text-success">(@ViewBag.ServicePercentageChange%)<i class="fe fe-arrow-up text-success"></i></span>@ViewBag.ServiceChangeDirection</p>
                            }
                             else if(@ViewBag.RevenueChangeDirection=="Decrease")
                            {
                                <p class="mb-0 text-muted"><span class="text-danger">(@ViewBag.ServicePercentageChange%)</span><i class="fe fe-arrow-down text-danger"></i>@ViewBag.RevenueChangeDirection</p>
                            } 
                            else
                            {
                                <p class="mb-0 text-muted"><span class="text-danger">(@ViewBag.ServicePercentageChange%)</span><i class="fe fe-arrow-down text-danger"></i>@ViewBag.RevenueChangeDirection</p>
                            }
					</div>
					<div class="my-auto ml-auto">
						<div class="chart-wrapper">
							<canvas id="areaChart3" class="areaChart3 chartjs-render-monitor chart-dropshadow-info overflow-hidden"></canvas>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
	<div class="col-sm-12 col-md-12 col-lg-6 col-xl-3">
		<div class="card overflow-hidden">
			<div class="card-body">
				<div class="d-flex">
					<div class="">
						<p class="mb-2 h6">Pending Patient</p>
						<h2 class="mb-1 ">@ViewBag.PatienIsCheckedpending</h2>
						<p class="mb-0 text-muted"><span class="text-danger">(+0.42%)</span><i class="fe fe-arrow-down text-danger"></i>Decrease</p>
					</div>
					<div class="my-auto ml-auto">
						<div class="chart-wrapper">
							<canvas id="areaChart4" class="areaChart4 chartjs-render-monitor chart-dropshadow-success overflow-hidden"></canvas>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
	</div>
	<!-- row closed -->
	
   <div class="row">
        <div class="col-xl-12 product">
            <div class="card">
                <div class="card-body">
                    <table id="example1" class="table table-striped table-dashboard-two mg-b-0" style="border:1px">
                        <thead class="h4">
                            <tr>
                                <th class="wd-lg-25p" style="font:bold">@Html.ActionLink("Receipt No", "Index", "ReceiptNo", new { sortField = "ReceiptNo", sortCol = ViewBag.SortField, sortOrder = ViewBag.SortOrder == "Asc" ? "Desc" : "Asc", searchString = ViewBag.searchString, PageSizeId = ViewBag.PageSizeId })</th>
                                <th class="wd-lg-10p">UHID.</th>
                                <th class="wd-lg-25p">@Html.ActionLink("Entry Date-Time ", "Index", "ConsultantPatient", new { sortField = "EntryDateTime", sortCol = ViewBag.SortField, sortOrder = ViewBag.SortOrder == "Asc" ? "Desc" : "Asc", searchString = ViewBag.searchString, PageSizeId = ViewBag.PageSizeId })</th>
                                <th class="wd-lg-25p">@Html.ActionLink("First Name", "Index", "ConsultantPatient", new { sortField = "Fname", sortCol = ViewBag.SortField, sortOrder = ViewBag.SortOrder == "Asc" ? "Desc" : "Asc", searchString = ViewBag.searchString, PageSizeId = ViewBag.PageSizeId })</th>
                                <th class="wd-lg-25p">@Html.ActionLink("Last Name", "Index", "ConsultantPatient", new { sortField = "Lname", sortCol = ViewBag.SortField, sortOrder = ViewBag.SortOrder == "Asc" ? "Desc" : "Asc", searchString = ViewBag.searchString, PageSizeId = ViewBag.PageSizeId })</th>
                                <th class="wd-lg-25p">@Html.ActionLink("Blood Group", "Index", "ConsultantPatient", new { sortField = "BloodGroup", sortCol = ViewBag.SortField, sortOrder = ViewBag.SortOrder == "Asc" ? "Desc" : "Asc", searchString = ViewBag.searchString, PageSizeId = ViewBag.PageSizeId })</th>
                                <th class="wd-lg-25p">@Html.ActionLink("Email", "Index", "ConsultantPatient", new { sortField = "Email", sortCol = ViewBag.SortField, sortOrder = ViewBag.SortOrder == "Asc" ? "Desc" : "Asc", searchString = ViewBag.searchString, PageSizeId = ViewBag.PageSizeId })</th>
                                <th class="wd-lg-25p">@Html.ActionLink("ContactNo", "Index", "ConsultantPatient", new { sortField = "ContactNo", sortCol = ViewBag.SortField, sortOrder = ViewBag.SortOrder == "Asc" ? "Desc" : "Asc", searchString = ViewBag.searchString, PageSizeId = ViewBag.PageSizeId })</th>
                                <th class="wd-lg-25p">@Html.ActionLink("Date Of Birth", "Index", "ConsultantPatient", new { sortField = "DOB", sortCol = ViewBag.SortField, sortOrder = ViewBag.SortOrder == "Asc" ? "Desc" : "Asc", searchString = ViewBag.searchString, PageSizeId = ViewBag.PageSizeId })</th>                                
                            </tr>
                        </thead>                        
                        <tbody>
                            @if(ViewBag.PatientList!=null)
                            {
                                <tr>
                                    <td><a href="@Url.Action("AddEdit","ConsultantPatient",new { patientId = encDecr.EncryptString(@ViewBag.PatientList.Id.ToString()) })">@ViewBag.PatientList.ReceiptNo</a></td>                                    
                                    <td>@ViewBag.PatientList.UHID</td>
                                    <td>@ViewBag.PatientList.EntryDateTime</td>
                                    <td>@ViewBag.PatientList.Fname</td>
                                    <td>@ViewBag.PatientList.Lname</td>
                                    <td>@ViewBag.PatientList.BloodGroup</td>
                                    <td>@ViewBag.PatientList.Email</td>
                                    <td>@ViewBag.PatientList.ContactNo</td>
                                    <td>@ViewBag.PatientList.DOB.ToString("dd-MM-yyyy")</td>
                                    
                                </tr>                      
                            }
                            else
                            {
                                <tr class="odd">
                                    <td valign="top" colspan="10" class="dataTables_empty"><div class="card mg-b-20 text-center"><div class="card-body h-100"><img src="~/assets/img/svgicons/no-data.svg" alt="" class="wd-10p"><h5 class="mg-b-10 mg-t-15 tx-18">Its Empty In Here</h5><a href="javascript:void(0);" class="text-dark">@ViewBag.ErroMsg</a></div></div></td>
                                </tr>
                            }
                     </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

    
    
    <div class="row">
        <div class="col-xl-12 product">
            <div class="card">
                <div class="card-body" style="text-align:center;" >
                    <label for="yearDropdown">Select Year : </label>
                    <select id="yearDropdown" name="year"></select>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-xl-6 product">
            <div class="card">
                <div class="card-header">
                    <h3 class="card-title">Total Patients</h3>
                    <div class="card-options ">
                        <a href="#" class="card-options-collapse" data-toggle="card-collapse"><i class="fe fe-chevron-up"></i></a>
                        <a href="#" class="card-options-fullscreen" data-toggle="card-fullscreen"><i class="fe fe-maximize"></i></a>
                        <a href="#" class="card-options-remove" data-toggle="card-remove"><i class="fe fe-x"></i></a>
                    </div>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-lg-12 col-xl-12">
                            <div class="chart-wrapper">
                                <div class="chart-wrapper">

                                    <canvas id="TotalPatientChart" class="chartjs-render-monitor chart-dropshadow2 overflow-hidden"></canvas>
                                </div>

                            </div>
                        </div>
                       
                    </div>
                </div>
            </div>
        </div>
        <div class="col-xl-6 product">
            <div class="card">
                <div class="card-header">
                    <h3 class="card-title">Total Collection</h3>
                    <div class="card-options ">
                        <a href="#" class="card-options-collapse" data-toggle="card-collapse"><i class="fe fe-chevron-up"></i></a>
                        <a href="#" class="card-options-fullscreen" data-toggle="card-fullscreen"><i class="fe fe-maximize"></i></a>
                        <a href="#" class="card-options-remove" data-toggle="card-remove"><i class="fe fe-x"></i></a>
                    </div>
                </div>
                <div class="card-body">
                    @* <div class="row">
                        <label for="yearDropdown">Select Year:</label>
                        <select id="yearDropdown" name="year"></select>
                    </div> *@
                    <div class="row">
                        <div class="col-lg-12 col-xl-12">
                            <div class="chart-wrapper">
                                <div class="chart-wrapper">
                                    <canvas id="AmountChart" class="chartjs-render-monitor chart-dropshadow2 overflow-hidden"></canvas>
                                </div>

                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>

     <div class="row">
        <div class="col-xl-6 product">
            <div class="card overflow-hidden">
                <div class="card-header border-bottom-0">
                    <div class="card-title d-block">Earnings</div>
                    <div class="card-options">
                    </div>
                </div>
                <div class="card-body pt-0 pb-0">
                    <small class="">Monthly Earning Report</small>
                    <div class="d-flex mb-4">
                        <div class="d-flex  align-items-center">
                            <h2 class="">@ViewBag.MonthlyCollection<span class="font-weight-normal text-muted fs-13">/ per month</span></h2>
                        </div>
                        <span class="text-success ml-auto"><i class="fe fe-arrow-up mr-2"></i>24.05%</span>
                    </div>

                </div>
                <div class="col-lg-50 col-xl-50">
                    <div class="chart-wrapper ">
                        <canvas id="earning" class="earning chart-dropshadow-primary mb-3 mt-2 h-50"></canvas>
                    </div>
                </div>
                <div class="row mb-5">
                    <div class="col-6 text-center border-right">
                        <div class="text-muted fs-14">Daily Profit</div>
                        <div class="h3 mt-1 mb-0">@ViewBag.TodayTotalAmount</div>

                        <span class="text-muted mb-0 fs-14"><span class="text-success mr-1"><i class="fe fe-arrow-up ml-1"></i>@ViewBag.RevenuePercentageChange%</span>@ViewBag.RevenueChangeDirection</span>
                    </div>
                    <div class="col-6 text-center">
                        <div class="text-muted fs-14">Last Month Profit</div>
                        <div class="h3 mt-1 mb-0">@ViewBag.LastMonthlyCollection</div>
                        <span class="text-muted mb-0 fs-14"><span class="text-danger mr-1"><i class="fe fe-arrow-down ml-1"></i>@ViewBag.RevenuePercentageChange%</span>@ViewBag.RevenueChangeDirection</span>
                    </div>
                </div>
            </div>
        </div>
    </div>

}
<style>
    .hidden-amount {
        display: none;
    }

    body {
        font-family: Arial, sans-serif;
        margin: 20px;
    }

    label {
        font-size: 16px;
        margin-right: 10px;
    }

    select {
        font-size: 16px;
        padding: 5px;
        border-radius: 5px;
        border: 1px solid #ccc;
        outline: none;
    }

        select:focus {
            border-color: #007BFF;
        }
</style>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script src="../assets/plugins/chart/chart.min.js"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
<!-- jQuery (optional if you want to use jQuery) -->
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>

    <script>
    $(document).ready(function () {
        var netAmountValue = '@ViewBag.netamount';  // Store the original net amount
        $('#toggleIcon').click(function () {
            var netAmountSpan = $('#netAmount');
            if (netAmountSpan.data('visible')) {
                netAmountSpan.text('*******');
                netAmountSpan.data('visible', false);
                $('#toggleIcon').removeClass('fa-eye').addClass('fa-eye-slash');
            } else {
                netAmountSpan.text(netAmountValue);
                netAmountSpan.data('visible', true);
                $('#toggleIcon').removeClass('fa-eye-slash').addClass('fa-eye');
            }
        });
        $('#netAmount').data('visible', false);  // Set initial state as hidden
    });

    function populateYearDropdown(startYear, endYear) {
        const yearDropdown = document.getElementById('yearDropdown');
        const currentYear = new Date().getFullYear();

        for (let year = startYear; year <= endYear; year++) {
            const option = document.createElement('option');
            option.value = year;
            option.textContent = year;
            if (year === currentYear) {
                option.selected = true;
            }
            yearDropdown.appendChild(option);
        }
    }

    window.onload = function () {
        const currentYear = new Date().getFullYear();
        populateYearDropdown(currentYear - 10, currentYear);  // Example: last 100 years and next 10 years
    }

  
    document.addEventListener('DOMContentLoaded', function () {
        // Function to update chart data based on selected year
        function updateChartData(year) {
            // Make an AJAX request to fetch data for the selected year
            fetch('/ConsultantDashboard/GetDataForYear?year=' + year)
                .then(response => response.json())
                .then(chartData => {
                    // Extract the labels and data from the fetched data
                    var labels = chartData.map(item => item.months);
                    var totalMonthCountData = chartData.map(item => item.totalMonthCount);
                    var sumOfTotalAmountData = chartData.map(item => item.sumOfTotalAmount);
                 console.log(chartData);
                    // Update the first chart with new data
                    barChart.data.labels = labels;
                    barChart.data.datasets[0].data = totalMonthCountData;
                    barChart.update();

                    // Update the second chart with new data
                    barChart1.data.labels = labels;
                    barChart1.data.datasets[0].data = sumOfTotalAmountData;
                    barChart1.update();
                })
                .catch(error => console.error('Error fetching data:', error));
        }

        // Initialize the first chart
        var ctx = document.getElementById('TotalPatientChart').getContext('2d');
        var initialChartData = JSON.parse('@Html.Raw(ViewBag.Chartdata)');
        var initialLabels = initialChartData.map(item => item.Months);
        var initialTotalMonthCountData = initialChartData.map(item => item.TotalMonthCount);

        var config = {
            type: 'bar',
            data: {
                labels: initialLabels,
                datasets: [{
                    label: 'Total Count',
                    data: initialTotalMonthCountData,
                    backgroundColor: 'rgba(153, 102, 255, 0.2)',
                    borderColor: 'rgba(153, 102, 255, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    x: {
                        title: {
                            display: true,
                            text: 'Months'
                        }
                    },
                    y: {
                        title: {
                            display: true,
                            text: 'Total Count'
                        },
                        min: 0,
                        max: 10,
                        ticks: {
                            stepSize: 1
                        }
                    }
                }
            }
        };

        var barChart = new Chart(ctx, config);

        // Initialize the second chart
        var ctx1 = document.getElementById('AmountChart').getContext('2d');
        var initialSumOfTotalAmountData = initialChartData.map(item => item.SumOfTotalAmount);

        var config1 = {
            type: 'bar',
            data: {
                labels: initialLabels,
                datasets: [{
                    label: 'Sum Of Total Amount',
                    data: initialSumOfTotalAmountData,
                    backgroundColor: 'rgba(153, 102, 255, 0.2)',
                    borderColor: 'rgba(153, 102, 255, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    x: {
                        title: {
                            display: true,
                            text: 'Months'
                        }
                    },
                    y: {
                        title: {
                            display: true,
                            text: 'Sum Of Total Amount'
                        },
                        min: 0,
                        max: 5000,
                        ticks: {
                            stepSize: 1000
                        }
                    }
                }
            }
        };

        var barChart1 = new Chart(ctx1, config1);

        // Event listener for dropdown change
        document.getElementById('yearDropdown').addEventListener('change', function () {
            var selectedYear = this.value;
            updateChartData(selectedYear);
        });
    });

    var ctx = document.getElementById('earning').getContext('2d');
    var initialChartData = JSON.parse('@Html.Raw(ViewBag.Chartdata)');
    var initialSumOfTotalAmountData = initialChartData.map(item => item.SumOfTotalAmount);
    var initialLabels = initialChartData.map(item => item.Months);
    

    var earningChart = new Chart(ctx, {
        type: 'line', // Line chart type
        data: {
            labels: initialLabels,            
            datasets: [{
                label: 'Earnings',
                data: initialSumOfTotalAmountData,
                backgroundColor: 'rgba(54, 162, 235, 0.2)',
                borderColor: 'rgba(54, 162, 235, 1)',
                borderWidth: 1,
                fill: false, // Ensures the area under the line is not filled
                tension: 0.4 // Smoothes the line

            }]
        },
        options: {
            responsive: true,
            scales: {
                x: {
                    
                    display: false // Hides the x-axis
                },
                y: {
                    
                    display: false // Hides the y-axis
                }
            },
            plugins: {
                legend: {
                    
                    display: false // Hides the legend
                }
            }
        }
    });
</script>

