@model HMS.Models.PatientMasterModel
@{
    Layout = "~/Views/Shared/_CounsultantLayout.cshtml";
    HMS.Common.EncryptDecrypt encDecr = new HMS.Common.EncryptDecrypt();
    string Action = ViewContext.RouteData.Values["action"].ToString();
    string Controller = ViewContext.RouteData.Values["controller"].ToString();
}
<div class="page-header">
    <div class="page-leftheader">
        <h4 class="page-title mb-0">DashBoard </h4>
        </>
    </div>
</div>
@using (Html.BeginForm(Action, Controller, null, FormMethod.Post))
{
    <h1 style="text-align:center">Welcome @ViewBag.Consultantname </h1>


    <div class="row">
        <div class="col-sm-12 col-md-12 col-lg-6 col-xl-3">
            <div class="card overflow-hidden">
                <div class="card-body">
                    <div class="d-flex">
                        <div class="">
                            <p class="mb-2 h6">Total Patients</p>
                            <h2 class="mb-1 ">@ViewBag.totalPatient</h2>

                        </div>

                    </div>
                </div>
            </div>
        </div>
        <div class="col-sm-12 col-md-12 col-lg-6 col-xl-3">
            <div class="card overflow-hidden">
                <div class="card-body">
                    <div class="d-flex">
                        <div class="">
                            <p class="mb-2 h6">New Patients</p>
                            <h2 class="mb-1 ">@ViewBag.todayPatient</h2>
                            @* <p class="mb-0 text-muted"><span class="text-danger">(+0.54%)</span><i class="fe fe-arrow-down text-danger"></i>Decrease</p> *@
                        </div>

                    </div>
                </div>
            </div>
        </div>
        <div class="col-sm-12 col-md-12 col-lg-6 col-xl-3">
            <div class="card overflow-hidden">
                <div class="card-body">
                    <div class="d-flex">
                        <div class="">
                            <p class="mb-2 h6">Total Services</p>
                            <h2 class="mb-1 ">@ViewBag.totalServices</h2>
                            @* <p class="mb-0 text-muted"><span class="text-danger">(+0.54%)</span><i class="fe fe-arrow-down text-danger"></i>Decrease</p> *@
                        </div>

                    </div>
                </div>
            </div>
        </div>
        <div class="col-sm-12 col-md-12 col-lg-6 col-xl-3">
            <div class="card overflow-hidden">
                <div class="card-body">
                    <div class="d-flex">
                        <div class="">
                            <p class="mb-2 h6">Total Collections</p>
                            <h2 class="mb-1 ">
                               
                                <p class="card-text">
                                    Net Amount = <span id="netAmount">*******</span>
                                    <i id="toggleIcon" class="fa fa-eye-slash" aria-hidden="true"></i>
                                </p>
                                <p class="card-text"></p>
                            </h2>
                            @* <p class="mb-0 text-muted"><span class="text-danger">(+0.54%)</span><i class="fe fe-arrow-down text-danger"></i>Decrease</p> *@
                        </div>

                    </div>
                </div>
            </div>
        </div>

    </div>

    <div class="row">
        <div class="col-xl-12 product">
            <div class="card">
                <div class="card-header">
                    <h3 class="card-title">Revenue</h3>
                    <div class="card-options ">
                        <a href="#" class="card-options-collapse" data-toggle="card-collapse"><i class="fe fe-chevron-up"></i></a>
                        <a href="#" class="card-options-fullscreen" data-toggle="card-fullscreen"><i class="fe fe-maximize"></i></a>
                        <a href="#" class="card-options-remove" data-toggle="card-remove"><i class="fe fe-x"></i></a>
                    </div>
                </div>
                <div class="card-body">
                    <div class="row">
                        <label for="yearDropdown">Select Year:</label>
                        <select id="yearDropdown" name="year"></select>                        
                    </div>
                    <div class="row">
                        <div class="col-lg-12 col-xl-8">
                            <div class="chart-wrapper">
                                <div class="chart-wrapper">
                                    
                                    <canvas id="bar-chart" class="chartjs-render-monitor chart-dropshadow2 overflow-hidden"></canvas>
                                </div>

                            </div>
                        </div>
                        <div class="col-lg-12 col-xl-4 lg-mt-5">
                           
                            <div class="row">
                                <div class="col-6">
                                    <div class="card box-shadow-0 overflow-hidden">
                                        <div class="card-body p-4">
                                            <div class="text-center">
                                                <i class="fa fa-tasks fa-2x text-primary text-primary-shadow"></i>
                                                <h3 class="mt-3 mb-0 ">07</h3>
                                                <small class="text-muted">Progress Tasks</small>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-6">
                                    <div class="card box-shadow-0 overflow-hidden">
                                        <div class="card-body p-4">
                                            <div class="text-center">
                                                <i class="fa fa-ticket fa-2x text-secondary text-secondary-shadow"></i>
                                                <h3 class="mt-3 mb-0 ">03</h3>
                                                <small class="text-muted">Open Ticket</small>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-6">
                                    <div class="card box-shadow-0 mb-0 overflow-hidden">
                                        <div class="card-body p-4">
                                            <div class="text-center">
                                                <i class="fa fa-bug fa-2x text-success text-success-shadow"></i>
                                                <h3 class="mt-3 mb-0 ">02</h3>
                                                <small class="text-muted">In Progress Bugs</small>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-6 ">
                                    <div class="card box-shadow-0 mb-0 overflow-hidden">
                                        <div class="card-body p-4">
                                            <div class="text-center">
                                                <i class="fa fa-folder-open-o fa-2x text-info text-info-shadow"></i>
                                                <h3 class="mt-3 mb-0 ">04</h3>
                                                <small class="text-muted">Progress Projects</small>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
<style>
    .hidden-amount {
        display: none;
    }

    body {
        font-family: Arial, sans-serif;
        margin: 20px;
    }

    label {
        font-size: 16px;
        margin-right: 10px;
    }

    select {
        font-size: 16px;
        padding: 5px;
        border-radius: 5px;
        border: 1px solid #ccc;
        outline: none;
    }

        select:focus {
            border-color: #007BFF;
        }
</style>
    <script>
    function populateYearDropdown(startYear, endYear) {
        const yearDropdown = document.getElementById('yearDropdown');
        const currentYear = new Date().getFullYear();

        for (let year = startYear; year <= endYear; year++) {
            const option = document.createElement('option');
            option.value = year;
            option.textContent = year;
            if (year === currentYear) {
                option.selected = true;
            }
            yearDropdown.appendChild(option);
        }
    }

    window.onload = function () {
        const currentYear = new Date().getFullYear();
        populateYearDropdown(currentYear - 10, currentYear );  // Example: last 100 years and next 10 years
    }
</script>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>    
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
<!-- jQuery (optional if you want to use jQuery) -->
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script>
    $(document).ready(function () {
        var netAmountValue = '@ViewBag.netamount';  // Store the original net amount
        $('#toggleIcon').click(function () {
            var netAmountSpan = $('#netAmount');
            if (netAmountSpan.data('visible')) {
                netAmountSpan.text('*******');
                netAmountSpan.data('visible', false);
                $('#toggleIcon').removeClass('fa-eye').addClass('fa-eye-slash');
            } else {
                netAmountSpan.text(netAmountValue);
                netAmountSpan.data('visible', true);
                $('#toggleIcon').removeClass('fa-eye-slash').addClass('fa-eye');
            }
        });
        $('#netAmount').data('visible', false);  // Set initial state as hidden
    });

    // document.addEventListener('DOMContentLoaded', function () {
    //     var ctx = document.getElementById('bar-chart').getContext('2d');
    //     debugger
    //     // Parse the chart data from ViewBag
    //     var chartData = JSON.parse('@Html.Raw(ViewBag.Chartdata)');

    //     // Extract the labels (Months) and data (TotalCount)
    //     var labels = chartData.map(function (item) { return item.Months; });
    //     var data = chartData.map(function (item) { return item.TotalMonthCount; });

    //     var config = {
    //         type: 'bar',
    //         data: {
    //             labels: labels,
    //             datasets: [{
    //                 label: 'Total Count',
    //                 data: data,
    //                 backgroundColor: 'rgba(153, 102, 255, 0.2)',
    //                 borderColor: 'rgba(153, 102, 255, 1)',
    //                 borderWidth: 1
    //             }]
    //         },
    //         options: {
    //             scales: {
    //                 x: {
    //                     title: {
    //                         display: true,
    //                         text: 'Months'
    //                     }
    //                 },
    //                 y: {
    //                     title: {
    //                         display: true,
    //                         text: 'Total Count'
    //                     },
    //                     min: 0,
    //                     max: 10,
    //                     ticks: {
    //                         stepSize: 1
    //                     }
    //                     // beginAtZero: true
    //                 }
    //             }
    //         }
    //     };

    //     var barChart = new Chart(ctx, config);
    // });
</script>
    <script>
    document.addEventListener('DOMContentLoaded', function () {
        debugger
        // Function to update chart data based on selected year
        function updateChartData(year) {
            // Make an AJAX request to fetch data for the selected year
            fetch('/ConsultantDashboard/GetDataForYear?year=' + year)
                .then(response => response.json())
                .then(chartData => {
                    // Extract the labels and data from the fetched data
                    var labels = chartData.map(item => item.Months);
                    var data = chartData.map(item => item.TotalMonthCount);

                    // Update the chart with new data
                    barChart.data.labels = labels;
                    barChart.data.datasets[0].data = data;
                    barChart.update();
                })
                .catch(error => console.error('Error fetching data:', error));
        }

        var ctx = document.getElementById('bar-chart').getContext('2d');

        // Parse the initial chart data from ViewBag
        var chartData = JSON.parse('@Html.Raw(ViewBag.Chartdata)');
        var labels = chartData.map(item => item.Months);
        var data = chartData.map(item => item.TotalMonthCount);

        var config = {
            type: 'bar',
            data: {
                labels: labels,
                datasets: [{
                    label: 'Total Count',
                    data: data,
                    backgroundColor: 'rgba(153, 102, 255, 0.2)',
                    borderColor: 'rgba(153, 102, 255, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    x: {
                        title: {
                            display: true,
                            text: 'Months'
                        }
                    },
                    y: {
                        title: {
                            display: true,
                            text: 'Total Count'
                        },
                        min: 0,
                        max: 10,
                        ticks: {
                            stepSize: 1
                        }
                    }
                }
            }
        };

        var barChart = new Chart(ctx, config);

        // Event listener for dropdown change
        document.getElementById('yearDropdown').addEventListener('change', function () {
            var selectedYear = this.value;
            updateChartData(selectedYear);
        });
    });

</script>

