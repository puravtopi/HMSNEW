@model HMS.Models.ChangePasswordModel
@{

    Layout = "~/Views/Shared/_ClinicLayout.cshtml";
    HMS.Common.EncryptDecrypt encryptDecrypt = new HMS.Common.EncryptDecrypt();
    string Action = ViewContext.RouteData.Values["action"].ToString();
    string Controller = ViewContext.RouteData.Values["controller"].ToString();
}
@if (TempData["Temp_Error"] != null)
{

}

@using (Html.BeginForm("ChangePassword", "UserMaster", FormMethod.Post, new { id = "ChangePasswordform" }))
{
    <div class="row">
        <div class="col-md-12 col-xl-12 col-xs-12 col-sm-12">
            <!--div-->
            <div class="card">
                <div class="card-body">
                    <div class="main-content-label mg-b-5">
                        User
                    </div>
                    <p class="mg-b-20"></p>
                    <div class="row row-sm">
                        <div class="col-lg-4">
                            <div class="form-group">                                
                                @Html.LabelFor(Model => Model.Password,"Old Password", new { @class = "form-label required-label" })
                                @Html.PasswordFor(Model => Model.Password, new { @class = "form-control", @id = "OldPassword", @maxlength = "8",@placeholder="Be 8 Character only" })
                                <p class="text-danger margin-bottom-0"> @Html.ValidationMessageFor(Model=>Model.Password)</p>
                            </div>
                        </div>
                        <div class="col-lg-4">
                            <div class="form-group">
                                @Html.LabelFor(Model => Model.NewPassowrd,"New Password", new { @class = "form-label required-label" })
                                @Html.PasswordFor(Model => Model.NewPassowrd, new { @class = "form-control", @id = "NewPassword", @maxlength = "8", @placeholder = "Be 8 Character only" })
                                <p class="text-danger margin-bottom-0"> @Html.ValidationMessageFor(Model => Model.NewPassowrd)</p>
                            </div>
                        </div>
                        <div class="col-lg-4">
                            <div class="form-group">
                                @Html.LabelFor(Model => Model.ConfimPassword, "Confim Password", new { @class = "form-label required-label" })
                                @Html.PasswordFor(Model => Model.ConfimPassword, new { @class = "form-control", @id = "ConfimPassword", @maxlength = "8", @placeholder = "Be 8 Character only" })
                                <p class="text-danger margin-bottom-0"> @Html.ValidationMessageFor(Model => Model.ConfimPassword)</p>
                            </div>
                        </div>
                    </div>
                    <div class="row row-sm">
                        <div class="col-lg-12 justify-content-center">

                            <a href="#" class="btn btn-secondary" id="btnReset" value="Reset">Reset</a>
                            <button class="btn btn-primary" id="btnSubmit" value="Submit">Change Password</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!--/div-->
    </div>
}
<!-- jQuery -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<!-- jQuery Validation -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.5/jquery.validate.min.js"></script>
<!-- jQuery Unobtrusive Validation -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/3.2.12/jquery.validate.unobtrusive.min.js"></script>

    <script>
    $("#btnReset").click(function () {
        // Reset the form fields
        document.getElementById("ChangePasswordform").reset();

        // Clear validation messages
        $(".text-danger").text("");


    });
</script>
    @* $(document).ready(function () {
        $("#AddEditForm").submit(function () {
            $("#btnSubmit", this).attr("disabled", "disabled");
        });
    });
        *@
     
       @*  $(document).ready(function () {
            const submitButton = $('#btnSubmit');
            const OldPassword = $('#OldPassword');
            const NewPassword = $('#NewPassword');
            const ConfimPassword = $('#ConfimPassword');

            // Enable/disable the submit button based on the field value
            OldPassword.on('input', function () {
                if (OldPassword.val().trim() === "") {
                    submitButton.prop('disabled', true); // Disable if field is empty
                } else {
                    submitButton.prop('disabled', false); // Enable if field has value
                }
            });
            NewPassword.on('input', function () {
                if (NewPassword.val().trim() === "") {
                    submitButton.prop('disabled', true); // Disable if field is empty
                } else {
                    submitButton.prop('disabled', false); // Enable if field has value
                }
            });
            ConfimPassword.on('input', function () {
                if (ConfimPassword.val().trim() === "") {
                    submitButton.prop('disabled', true); // Disable if field is empty
                } else {
                    submitButton.prop('disabled', false); // Enable if field has value
                }
            });

            // Initialize the button state (useful for pre-filled forms)
            if (OldPassword.val().trim() === "" && NewPassword.val().trim() === "" && ConfimPassword.val().trim() === "") {
                submitButton.prop('disabled', true);
            } else {
                submitButton.prop('disabled', false);
            }
        }); *@


    <script>
    document.getElementById('btnSubmit').addEventListener('click', function (event) {
        var OldPassword = document.getElementById('OldPassword').value.trim();
        if (OldPassword === '') {
            document.getElementById('OldPasswordError').style.display = 'block';
            event.preventDefault(); // Prevent form submission
        } else {
            document.getElementById('OldPasswordError').style.display = 'none';
        }
        var NewPassword = document.getElementById('NewPassword').value.trim();
        if (NewPassword === '') {
            document.getElementById('NewPasswordError').style.display = 'block';
            event.preventDefault(); // Prevent form submission
        } else {
            document.getElementById('NewPasswordError').style.display = 'none';
        }
        var ConfimPassword = document.getElementById('ConfimPassword').value.trim();
        if (ConfimPassword === '') {
            document.getElementById('ConfimPasswordError').style.display = 'block';
            event.preventDefault(); // Prevent form submission
        } else {
            document.getElementById('ConfimPasswordError').style.display = 'none';
        } 
    });
</script>   
