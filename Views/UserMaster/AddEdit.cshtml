@model HMS.Models.UserMasterModel
@{

    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    HMS.Common.EncryptDecrypt encryptDecrypt = new HMS.Common.EncryptDecrypt();
    string Action = ViewContext.RouteData.Values["action"].ToString();
    string Controller = ViewContext.RouteData.Values["controller"].ToString();
}
@if (TempData["Temp_Error"] != null)
{

}

<div class="page-header">
    <div class="page-leftheader">
        <h4 class="page-title mb-0">User</h4>
    </div>
    <div class="page-rightheader">
        <div class="ml-3 ml-auto d-flex">
            <div class="d-flex align-items-center flex-wrap text-nowrap">
                <a href="@Url.Action("Index","UserMaster")" class="btn btn-primary btn-icon-text mb-2 mb-md-0">
                    <i class="fa fa-arrow-left "></i>
                    Back
                </a>
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header">
                <div class="card-title">Forms</div>
                <div class="card-options ">
                    <a href="#" class="card-options-collapse" data-toggle="card-collapse"><i class="fe fe-chevron-up"></i></a>
                    <a href="#" class="card-options-fullscreen" data-toggle="card-fullscreen"><i class="fe fe-maximize"></i></a>
                    <a href="#" class="card-options-remove" data-toggle="card-remove"><i class="fe fe-x"></i></a>
                </div>
            </div>
            <div class="card-body">
                @using (Html.BeginForm(Action, Controller, FormMethod.Post, new { area = Model.Area, id = "AddEditForm" }))
                {
                    <div class="row">
                        <div class="col-md-12 col-xl-12 col-xs-12 col-sm-12">
                            <!--div-->
                            <div class="card">
                                <div class="card-body">
                                    <div class="main-content-label mg-b-5">
                                        User
                                    </div>
                                    <p class="mg-b-20"></p>
                                    <div class="row row-sm">
                                        <div class="col-lg-4">
                                            <div class="form-group">
                                                @Html.HiddenFor(Model => Model.Id)
                                                @Html.LabelFor(Model => Model.FirstName, "First Name", new { @class = "form-label required-label" })
                                                @Html.TextBoxFor(Model => Model.FirstName, new { @class = "form-control", @id = "FirstName" })
                                                <p class="text-danger margin-bottom-0"> @Html.ValidationMessageFor(Model => Model.FirstName)</p>
                                            </div>
                                        </div>
                                        <div class="col-lg-4">
                                            <div class="form-group">
                                                @Html.LabelFor(Model => Model.LastName, "Last Name", new { @class = "form-label required-label" })
                                                @Html.TextBoxFor(Model => Model.LastName, new { @class = "form-control", @id = "LastName" })
                                                <p class="text-danger margin-bottom-0">@Html.ValidationMessageFor(Model => Model.LastName)</p>
                                            </div>
                                        </div>
                                        <div class="col-lg-4">
                                            <div class="form-group">
                                                @Html.LabelFor(Model => Model.Email, "Email", new { @class = "form-label required-label" })
                                                @Html.TextBoxFor(Model => Model.Email, new { @class = "form-control", @id = "Email" })
                                                <p class="text-danger margin-bottom-0"> @Html.ValidationMessageFor(Model => Model.Email)</p>
                                            </div>
                                        </div>
                                        <div class="col-lg-4">
                                            <div class="form-group">
                                                @Html.LabelFor(Model => Model.Active, new { @class = "form-label" })
                                                @Html.DropDownListFor(Model => Model.Active, new SelectList(Model.lstStatus, "Value", "Text"), new { @class = "form-control select2-list dropdown-validation" })

                                            </div>
                                        </div>
                                    </div>
                                    <div class="row row-sm">
                                        <div class="col-lg-12 justify-content-center">
                                            <a href="@Url.Action("Index","UserMaster")" class="btn btn-info" id="btnBack" value="Reset">Back</a>

                                            <a href="#" class="btn btn-secondary" id="btnReset" value="Reset">Reset</a>

                                            <button class="btn btn-primary" id="btnSubmit" value="Submit">Save</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <!--/div-->
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<!-- jQuery -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<!-- jQuery Validation -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.5/jquery.validate.min.js"></script>
<!-- jQuery Unobtrusive Validation -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/3.2.12/jquery.validate.unobtrusive.min.js"></script>

<script>
    $("#btnReset").click(function () {
        // Reset the form fields
        document.getElementById("AddEditForm").reset();

        // Clear validation messages
        $(".text-danger").text("");


    });

    document.getElementById('btnSubmit').addEventListener('click', function (event) {
        var FirstName = document.getElementById('FirstName').value.trim();
        if (FirstName === '') {
            document.getElementById('FirstNameError').style.display = 'block';
            event.preventDefault(); // Prevent form submission
        } else {
            document.getElementById('FirstNameError').style.display = 'none';

        }

        var LastName = document.getElementById('LastName').value.trim();
        if (LastName === '') {
            document.getElementById('LastNameError').style.display = 'block';
            event.preventDefault(); // Prevent form submission
        } else {
            document.getElementById('LastNameError').style.display = 'none';
        }

        var Email = document.getElementById('Email').value.trim();
        if (Email === '') {
            document.getElementById('EmailError').style.display = 'block';
            event.preventDefault(); // Prevent form submission
        } else {
            document.getElementById('EmailError').style.display = 'none';
        } var MotherName = document.getElementById('MotherName').value.trim();
        if (MotherName === '') {
            document.getElementById('MotherNameError').style.display = 'block';
            event.preventDefault(); // Prevent form submission
        } else {
            document.getElementById('MotherNameError').style.display = 'none';
        } var DOB = document.getElementById('DOB').value.trim();
        if (DOB === '') {
            document.getElementById('DOBError').style.display = 'block';
            event.preventDefault(); // Prevent form submission
        } else {
            document.getElementById('DOBError').style.display = 'none';
        }
    });
</script>
